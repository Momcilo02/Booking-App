<Window x:Class="BookingApp.View.Guest.AccommodationReviewView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BookingApp.View.Guest"
        xmlns:vm ="clr-namespace:BookingApp.WPF.ViewModel"
        mc:Ignorable="d"
        Title="AccommodationReviewView" 
        Height="650" 
        Width="350"
        Background="{StaticResource Guest60Brush}">
    <Window.DataContext>
        <vm:AccommodationReviewViewModel></vm:AccommodationReviewViewModel>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="Label" x:Key="TextLabel">
            <Setter Property="FontFamily" Value="Rubik"></Setter>
            <Setter Property="Foreground" Value="{StaticResource GuestTextBrush}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40px"></RowDefinition>
            <RowDefinition Height="40px"></RowDefinition>
            <RowDefinition Height="40px"></RowDefinition>
            <RowDefinition Height="120px"></RowDefinition>
            <RowDefinition Height="30px"></RowDefinition>
            <RowDefinition Height="100px"></RowDefinition>
            <RowDefinition Height="190px"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Foreground="{StaticResource GuestTextBrush}" FontFamily="Rubik" Grid.Column="0" Grid.Row="0"
                   TextWrapping="Wrap" Text="Rate the cleannes of the accommodation" Width="150" ></TextBlock>
        <ComboBox x:Name="CleannessComboBox" Grid.Column="1" Grid.Row="0" Height="20px" SelectedItem="{Binding Cleanness}" Margin="10">
            <ComboBoxItem Content="1- Very dirty"/>
            <ComboBoxItem Content="2- Dirty"/>
            <ComboBoxItem Content="3- Somewhat clean"/>
            <ComboBoxItem Content="4- Clean"/>
            <ComboBoxItem Content="5- Very Clean"/>
        </ComboBox>
        <Label Style="{StaticResource TextLabel}" Grid.Column="0" Grid.Row="1" Content="Rate owners hospitality" Width="150"></Label>
        <ComboBox x:Name="CorecntnessComboBox" Grid.Column="1" Grid.Row="1" Height="20px" Margin="10" SelectedItem="{Binding Correctness}" FontFamily="Rubik">
            <ComboBoxItem Content="1- Very rude"/>
            <ComboBoxItem Content="2- Rude"/>
            <ComboBoxItem Content="3- Somewhat Hospitable"/>
            <ComboBoxItem Content="4- Hospitable"/>
            <ComboBoxItem Content="5- Very Hospitable"/>
        </ComboBox>
        <TextBlock FontFamily="Rubik" Foreground="{StaticResource GuestTextBrush}"  TextWrapping="Wrap" Grid.Column="0" Grid.Row="2" Text="Leave some photos of your stay" Width="150"></TextBlock>
        <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal">
            <TextBox Width="120" Height="20" Margin="10" Text="{Binding Path=ImageUrl, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            <Button Width="25" Height="20" Margin="0, 10,10,10" Command="{Binding Path=AddClick}">+</Button>
        </StackPanel>
        <Grid Grid.Row="3" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="1"
       Grid.Row="0"
       Margin="10"
       x:Name="AccommodationImage"
       Source="{Binding CurrentImage, UpdateSourceTrigger=PropertyChanged}"></Image>
            <Button Grid.Column="0"
        Width="50"
        Height="50"
        Content="&#60;" 
        FontWeight="Bold"
        FontSize="30" VerticalContentAlignment="Center"
        HorizontalContentAlignment="Center"
        Background="{StaticResource GuestTextBrush}"
        Command="{Binding PreviousImageClick}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding CanGoPreviousImage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Grid.Column="2"
        Width="50"
        Height="50"
        Content="&#62;" 
        FontWeight="Bold"
        FontSize="30" VerticalContentAlignment="Center"
        HorizontalContentAlignment="Center"
        Background="{StaticResource GuestTextBrush}"
        Command="{Binding NextImageClick}"
        IsEnabled="{Binding CanGoNextImage}">
                <!--<Button.Style>
        <Style TargetType="Button">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CanGoNextImage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </Button.Style>-->
            </Button>
        </Grid>
        
        <Label Style="{StaticResource TextLabel}" Grid.ColumnSpan="2" Grid.Row="4" Content="Leave a comment about your stay:" Width="330" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,0"></Label>
        <TextBox x:Name="CommentTextBox" Grid.ColumnSpan="2" Grid.Row="5" Height="90" Width="330" Text="{Binding Path=Comment, UpdateSourceTrigger=PropertyChanged}"></TextBox>
        <StackPanel Grid.Row="6" Grid.ColumnSpan="2" Margin="5">
            <CheckBox Foreground="{StaticResource GuestTextBrush}" Content="Make a suggestion for Renovation" IsChecked="{Binding IsSuggestionChecked}" Name="SuggestionCheckBox"></CheckBox>
            <StackPanel IsEnabled="{Binding ElementName=SuggestionCheckBox, Path=IsChecked}">
                <TextBlock Foreground="{StaticResource GuestTextBrush}"
                           FontFamily="Rubik"
                           Text="Suggestion:"  IsEnabled="{Binding ElementName=SuggestionCheckBox, Path=IsChecked}"></TextBlock>
                <TextBox Height="100" Text="{Binding Path=Suggestion}"  IsEnabled="{Binding ElementName=SuggestionCheckBox, Path=IsChecked}"></TextBox>
                <ComboBox x:Name="SuggestionComboBox" Grid.Column="1" Grid.Row="1" Height="25px" Text="{Binding Urgency}"  IsEnabled="{Binding ElementName=SuggestionCheckBox, Path=IsChecked}">
                    <ComboBoxItem Content="1- Not Urgent"/>
                    <ComboBoxItem Content="2- Somewhat Urgent"/>
                    <ComboBoxItem Content="3- Urgent"/>
                    <ComboBoxItem Content="4- Very Urgent"/>
                    <ComboBoxItem Content="5- Extreamly Urgent"/>
                </ComboBox>
            </StackPanel>
            
        </StackPanel>

        <Button FontFamily="Rubik" x:Name="ConfirmButton" Grid.Column="0" Grid.Row="7" Content="Confirm" Width="100" Height="35" Command="{Binding ConfirmClick}"></Button>
        <Button FontFamily="Rubik" x:Name="CancelButton" Grid.Column="1" Grid.Row="7" Content="Cancel" Width="100" Height="35" Command="{Binding CancelClick}"></Button>
    </Grid>
</Window>
